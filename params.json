{"name":"Haystack Queryparser","tagline":"Converts arbitrarily complicated user entered query strings to a haystack query object.","body":"haystack-queryparser\r\n====================\r\n\r\nConverts arbitrarily complicated user entered query strings to a haystack query object.\r\n\r\n###Usage\r\n  ```python\r\n  from haystack_queryparser import ParseSQ\r\n  ```\r\n  Also provides or_parser and and_parser which can be directly used with a query\r\n  ```python\r\n  parser = ParseSQ() \r\n  sq_object = parser.parse(query)\r\n  ```\r\n  takes a `AND` or `OR` operator to use as default optionally.\r\n\r\n###Input\r\n  Input should be a string.This the query.\r\n  \r\n###Output\r\n  Output is a `SQ(haystack.query.SQ)` object.\r\n  This can be passed to `SearchQuerySet.filter` and the\tquery will be applied\r\n\r\n###Test\r\n  To run the test you need to be in the django environment.So you can do something like this:\r\n```\r\n$ python manage.py shell\r\n>>> import haystack_queryparser.tests as test\r\n>>> tests.main()\r\ntest_operators (modules.haystack_queryparser2.tests.SimpleTest) ... ok\r\ntest_parse (modules.haystack_queryparser2.tests.SimpleTest) ... ok\r\ntest_parse_with_new_default (modules.haystack_queryparser2.tests.SimpleTest) ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan 3 tests in 0.004s\r\n\r\nOK\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}